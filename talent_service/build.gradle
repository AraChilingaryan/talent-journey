plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
}

group = 'com.disqo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.5'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.5'
    implementation 'org.springframework.boot:spring-boot-devtools'


    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.1000')
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk
    implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.12.90'
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.94'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.6'

    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

}

test {
    useJUnitPlatform()
}

//task fatJar(type: Jar) {
//    manifest {
//        attributes 'Main-Class': 'com/disqo/talent_service/TalentServiceApplication.java'
//    }
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    with Jar
//}

//task fatJar(type: Jar) {
//    manifest {
//        attributes 'Main-Class': 'com/disqo/talent_service/TalentServiceApplication.java'
//    }
//    baseName = project.name + '-all'
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}

jar {
    manifest {
        attributes 'Main-Class': 'com/disqo/talent_service/TalentServiceApplication.java'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

